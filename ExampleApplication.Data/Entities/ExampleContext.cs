// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.Data.Entity;
using System.Data.SqlClient;
using System.Data.SqlTypes;

namespace ExampleApplication.Data.Entities
{
    public class ExampleContext : DbContext, IExampleContext
    {
        public DbSet<Country> Countries { get; set; }
        public DbSet<RadioStation> RadioStations { get; set; }
        
        static ExampleContext()
        {
            System.Data.Entity.Database.SetInitializer<ExampleContext>(null);
        }

        public ExampleContext()
            : base("Name=ExampleDatabase")
        {
        }

        public ExampleContext(string connectionString) : base(connectionString)
        {
        }

        public ExampleContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model) : base(connectionString, model)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == DBNull.Value);
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new CountryMapping());
            modelBuilder.Configurations.Add(new RadioStationMapping());
        }

        public static DbModelBuilder CreateModel(DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new CountryMapping(schema));
            modelBuilder.Configurations.Add(new RadioStationMapping(schema));
            return modelBuilder;
        }
        
        // Stored Procedures
    }
}
// </auto-generated>
